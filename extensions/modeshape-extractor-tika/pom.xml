<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.modeshape</groupId>
    <artifactId>modeshape</artifactId>
    <version>2.5-SNAPSHOT</version>
    <relativePath>../..</relativePath>
  </parent>
  <!-- The groupId and version values are inherited from parent -->
  <artifactId>modeshape-extractor-tika</artifactId>
  <packaging>jar</packaging>
  <name>ModeShape Tika-based text extractor</name>
  <description>ModeShape text extractor that uses the Apache Tika library</description>
  <url>http://www.modeshape.org</url>
  <!--
  Define the dependencies.  Note that all version and scopes default to those 
  defined in the dependencyManagement section of the parent pom.
  -->
  <dependencies>
    <dependency>
      <groupId>org.modeshape</groupId>
      <artifactId>modeshape-graph</artifactId>
    </dependency>
    <dependency>
      <groupId>org.modeshape</groupId>
      <artifactId>modeshape-graph</artifactId>
      <version>${project.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.modeshape</groupId>
      <artifactId>modeshape-common</artifactId>
      <version>${project.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <!-- 
    This Tika dependency brings in a lot of 3rd party libraries, but you can use 
    exclusions to prevent dependency on those libraries you don't want to use.
    -->
    <dependency>
      <groupId>org.apache.tika</groupId>
      <artifactId>tika-parsers</artifactId>
      <version>0.8</version>
    </dependency>
    <!-- 
    Testing (note the scope)
    -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-library</artifactId>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- 
    Logging (require SLF4J API for compiling, but use Log4J and its SLF4J binding for testing) 
    -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
    </dependency>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
    </dependency>
    <!-- 
    Java Concurrency in Practice annotations
    -->
	<dependency>
	  <groupId>net.jcip</groupId>
	  <artifactId>jcip-annotations</artifactId>
	</dependency>
  </dependencies>
  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
      </plugin>
    </plugins>
  </reporting>
  <build>
    <plugins>
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <configuration>
          <descriptors>
            <descriptor>${project.basedir}/../../src/main/assembly/text-extractor-with-dependencies.xml</descriptor>
          </descriptors>
					<finalName>${project.artifactId}-${project.version}</finalName>
        </configuration>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
			<!--
				Adding OSGI metadata to the JAR without changing the packaging type.
			-->
			<plugin>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<executions>
					<execution>
						<id>bundle-manifest</id>
						<phase>process-classes</phase>
						<goals>
							<goal>manifest</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
    </plugins>
  </build>
</project>
