#
# ModeShape (http://www.modeshape.org)
# See the COPYRIGHT.txt file distributed with this work for information
# regarding copyright ownership.  Some portions may be licensed
# to Red Hat, Inc. under one or more contributor license agreements.
# See the AUTHORS.txt file in the distribution for a full listing of 
# individual contributors. 
#
# ModeShape is free software. Unless otherwise indicated, all code in ModeShape
# is licensed to you under the terms of the GNU Lesser General Public License as
# published by the Free Software Foundation; either version 2.1 of
# the License, or (at your option) any later version.
#
# ModeShape is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this software; if not, write to the Free
# Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
# 02110-1301 USA, or see the FSF site: http://www.fsf.org.
#
connectorName = JCR Repository Connector
errorSerializingObjectUsedInSource = Error serializing a {0} instance owned by the {1} JcrRepositorySource
objectFoundInJndiWasNotRepository = Object in JNDI at {0} found by JcrRepositorySource {1} was expected to be a javax.jcr.Repository but instead was {2}
repositoryObjectNotFoundInJndi = A JCR Repository object could not be found in JNDI at {0}
propertyIsRequired = The {0} property is required but has no value
workspaceAlreadyExistsInRepository = The workspace "{0}" already exists in the "{1}" repository
unableToCreateWorkspaceInRepository = Unable to create workspace "{0}" in the "{1}" repository; feature not supported by JCR repository source
unableToDestroyWorkspaceInRepository = Unable to destroy workspace "{0}" in the "{1}" repository; feature not supported by JCR repository source
unableToFindNodeWithoutPathOrUuid = Unable to find nodes in the "{0}" repository unless they have a path and/or UUID (requested location was {1})
unableToFindNodeWithUuid = Unable to find node in the "{0}" repository with UUID {1}
nodeDoesNotExist = Node at "{2}" does not exist in the "{1}" workspace of the "{0}" repository
