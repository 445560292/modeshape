<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.jboss.dna</groupId>
	<artifactId>dna</artifactId>
	<version>0.2-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>JBoss DNA</name>
	<url>http://www.jboss.org/dna</url>
	<description>
		JBoss DNA provides tools for working with JCR repositories.
	</description>
	<scm>
		<connection>scm:svn:https://svn.jboss.org/repos/dna/trunk</connection>
	</scm>
	<developers>
		<developer>
			<name>Randall Hauch</name>
			<id>randall</id>
			<email>rhauch@redhat.com</email>
			<organization>Red Hat</organization>
			<roles>
				<role>Project Lead</role>
				<role>Developer</role>
			</roles>
			<timezone>-6</timezone>
		</developer>
		<developer>
			<name>John Verhaeg</name>
			<id>johnny</id>
			<email>jverhaeg@redhat.com</email>
			<organization>Red Hat</organization>
			<roles>
				<role>Developer</role>
			</roles>
			<timezone>-6</timezone>
		</developer>
		<developer>
			<name>Dan Florian</name>
			<id>dan</id>
			<email>dflorian@redhat.com</email>
			<organization>Red Hat</organization>
			<roles>
				<role>Developer</role>
			</roles>
			<timezone>-6</timezone>
		</developer>
		<developer>
			<name>Stefano Maestri</name>
			<id>stefano</id>
			<email>stefano.maestri@javalinux.it</email>
			<roles>
				<role>Developer</role>
			</roles>
			<timezone>+1</timezone>
		</developer>
	</developers>
	<modules>
		<module>dna-common</module>
		<module>dna-spi</module>
		<module>dna-repository</module>
		<module>dna-maven-classloader</module>
		<module>sequencers/dna-sequencer-images</module>
		<module>sequencers/dna-sequencer-mp3</module>
		<module>sequencers/dna-sequencer-esbMessage</module>
		<module>connectors/dna-connector-jbosscache</module>
    	<module>dna-integration-tests</module>
	</modules>

	<properties>
		<dna-version>0.2-SNAPSHOT</dna-version>
	</properties>
	
	<profiles>
		<profile>
			<id>release</id>
			<modules>
				<module>docs</module>
		        <module>docs/examples/gettingstarted</module>
			</modules>
		</profile>
		<profile>
		    <!-- 
			This profile is activated when the "generate.docs" property is set,
			as in "mvn ... -Dgenerate.docs=true ..."
		    -->
	      <id>docs</id>
	      <activation>
	        <property>
	          <name>generate.docs</name>
	        </property>
	      </activation>
	      <modules>
	        <module>docs</module>
	      </modules>
		  <reporting>
		    <plugins>
		      <plugin>
		        <groupId>org.apache.maven.plugins</groupId>
		        <artifactId>maven-javadoc-plugin</artifactId>
		        <configuration>
		          <aggregate>true</aggregate>
				  <show>public</show>
				  <title>JBoss DNA ${project.version}</title>
		        </configuration>
		      </plugin>
		    </plugins>
		  </reporting>
	    </profile>
		<profile>
		  <!-- 
          This profile is activated manually, as in "mvn ... -P assembly ..."
		  -->
	      <id>assembly</id>
	      <build>
	        <plugins>
	          <plugin>
	            <artifactId>maven-assembly-plugin</artifactId>
	            <inherited>false</inherited>
	            <executions>
	              <execution>
	                <id>make-assembly</id>
	                <phase>install</phase>
	                <goals>
	                  <goal>assembly</goal>
	                </goals>
	              </execution>
	            </executions>
	            <configuration>
					<finalName>
						jboss-dna-${project.version}
					</finalName>
             			<descriptors>
						<descriptor>
							build/assembly/examples.xml
						</descriptor>
						<descriptor>
							build/assembly/javadoc.xml
						</descriptor>
						<descriptor>
							build/assembly/dist.xml
						</descriptor>
						<descriptor>
							build/assembly/src.xml
						</descriptor>
					</descriptors>
	            </configuration>
	          </plugin>
	        </plugins>
	      </build>
	      <modules>
	        <module>docs</module>
	        <module>docs/examples/gettingstarted</module>
	      </modules>
	    </profile>
	</profiles>
	<build>
		<!-- This section defines the default plugin settings inherited by child projects. -->
		<pluginManagement>
			<plugins>
				<!-- Fixes how test resources of a project can be used in projects dependent on it  -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.2</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>2.2</version>
					<configuration>
						<aggregate>true</aggregate>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<!-- Specify the compiler options and settings -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
               <version>2.0.2</version>
				<configuration>
					<source>1.5</source>
					<target>1.5</target>
					<showDeprecation>false</showDeprecation>
					<showWarnings>false</showWarnings>
				</configuration>
			</plugin>
			<!-- Produce source jars during the 'verify' phase -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>verify</phase>
						<goals>
							<goal>jar</goal>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<includes>
						<include>**/*TestCase.java</include>
						<include>**/*Test.java</include>
					</includes>
					<!--excludes>
						<exclude>**/Abstract*TestCase.java</exclude>
						<exclude>**/Abstract*Test.java</exclude>
					</excludes-->
				</configuration>
			</plugin>
			<!-- 
           Build a test-jar for each project, so that src/test/* resources and classes can be used
           in other projects.  Also customize how the jar files are assembled.
           -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<archive>
						<manifest>
							<addDefaultSpecificationEntries>
								true
							</addDefaultSpecificationEntries>
							<addDefaultImplementationEntries>
								true
							</addDefaultImplementationEntries>
						</manifest>
						<manifestEntries>
							<Implementation-URL>
								${pom.url}
							</Implementation-URL>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<!--
	This section defines the default dependency settings inherited by child projects.
	Note that this section does not add dependencies, but rather provide default settings.
	-->
	<dependencyManagement>
		<dependencies>
			<!-- DNA subprojects -->
			<dependency>
				<groupId>org.jboss.dna</groupId>
				<artifactId>dna-common</artifactId>
				<version>${dna-version}</version>
			</dependency>
			<dependency>
				<groupId>org.jboss.dna</groupId>
				<artifactId>dna-maven-classloader</artifactId>
				<version>${dna-version}</version>
			</dependency>
			<dependency>
				<groupId>org.jboss.dna</groupId>
				<artifactId>dna-spi</artifactId>
				<version>${dna-version}</version>
			</dependency>
			<dependency>
				<groupId>org.jboss.dna</groupId>
				<artifactId>dna-repository</artifactId>
				<version>${dna-version}</version>
			</dependency>
			<!-- 
		    Time and Date
		    -->
			<dependency>
				<groupId>joda-time</groupId>
				<artifactId>joda-time</artifactId>
				<version>1.4</version>
			</dependency>
			<!-- 
		    Rules
		    -->
			<dependency>
				<groupId>jsr94</groupId>
				<artifactId>jsr94</artifactId>
				<version>1.1</version>
			</dependency>
			<dependency>
				<groupId>org.drools</groupId>
				<artifactId>drools-jsr94</artifactId>
				<version>4.0.7</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.drools</groupId>
				<artifactId>drools-compiler</artifactId>
				<version>4.0.7</version>
				<scope>test</scope>
			</dependency>
			<!-- Testing (note the scope) -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.4</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest-library</artifactId>
				<version>1.1</version>
				<scope>test</scope>
			</dependency>
            <dependency>
            	<groupId>org.mockito</groupId>
            	<artifactId>mockito-all</artifactId>
            	<version>1.3</version>
            	<scope>test</scope>
            </dependency>
			<!-- Logging (require SLF4J API for compiling, but use Log4J and its SLF4J binding for testing) -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>1.4.3</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
				<version>1.4.3</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>1.2.14</version>
				<scope>test</scope>
			</dependency>
			<!-- Java Concurrency in Practice annotations -->
			<dependency>
				<groupId>net.jcip</groupId>
				<artifactId>jcip-annotations</artifactId>
				<version>1.0</version>
				<scope>compile</scope>
			</dependency>
			<!-- Java Content Repository API -->
			<dependency>
				<groupId>javax.jcr</groupId>
				<artifactId>jcr</artifactId>
				<version>1.0.1</version>
				<scope>compile</scope>
			</dependency>
			<!-- Apache Jackrabbit (JCR Implementation) -->
			<dependency>
				<groupId>org.apache.jackrabbit</groupId>
				<artifactId>jackrabbit-api</artifactId>
				<version>1.3.3</version>
				<scope>test</scope>
				<!-- Exclude these since they are included in JDK 1.5 -->
				<exclusions>
					<exclusion>
						<groupId>xml-apis</groupId>
						<artifactId>xml-apis</artifactId>
					</exclusion>
					<exclusion>
						<groupId>xerces</groupId>
						<artifactId>xercesImpl</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.jackrabbit</groupId>
				<artifactId>jackrabbit-core</artifactId>
				<version>1.3.3</version>
				<scope>test</scope>
				<!-- Exclude these since they are included in JDK 1.5 -->
				<exclusions>
					<exclusion>
						<groupId>xml-apis</groupId>
						<artifactId>xml-apis</artifactId>
					</exclusion>
					<exclusion>
						<groupId>xerces</groupId>
						<artifactId>xercesImpl</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
		    <!-- 
		      Apache JCR API unit tests (for any JCR implementation), which is a subset of the official TCK
		    -->
		    <dependency>
				<groupId>org.apache.jackrabbit</groupId>
				<artifactId>jackrabbit-jcr-tests</artifactId>
				<version>1.3.3</version>
				<scope>test</scope>
		    </dependency>
			<!-- Databases and JDBC Drivers -->
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>5.0.7</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.derby</groupId>
				<artifactId>derby</artifactId>
				<version>10.2.1.6</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
			</plugin>
	    </plugins>
	</reporting>
	
	<repositories>
		<repository>
			<id>jboss</id>
			<url>http://repository.jboss.com/maven2/</url>
		</repository>
		
		<repository>
			<id>jboss-snapshot</id>
			<url>http://snapshots.jboss.org/maven2</url>
		</repository>
	</repositories>
	<distributionManagement>
		<repository>
			<!-- Copy the distribution jar file to a local checkout of the maven repository 
 			  -  This variable can be set in $MAVEN_HOME/conf/settings.xml -->
			<id>repository.jboss.org</id>
			<url>file://${jboss.repository.root}</url>
		</repository>
	</distributionManagement>
</project>
