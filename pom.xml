<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.jboss.dna</groupId>
	<artifactId>dna</artifactId>
	<version>0.7-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>JBoss DNA</name>
	<url>http://www.jboss.org/dna</url>
	<inceptionYear>2008</inceptionYear>
	<description>
		JBoss DNA is a JCR repository implementation with support for federation and sequencing.
	</description>
	<scm>
		<connection>scm:svn:https://anonsvn.jboss.org/repos/dna/trunk</connection>
    <developerConnection>scm:svn:https://svn.jboss.org/repos/dna/trunk</developerConnection>   
	</scm>
  <issueManagement>
    <system>jira</system>
    <url>http://jira.jboss.org/jira/browse/DNA</url>
  </issueManagement>
	<licenses>
		<license>
			<name>GNU Lesser General Public License</name>
			<url>http://repository.jboss.org/licenses/lgpl-2.1.txt</url>
			<!--url>http://www.gnu.org/licenses/lgpl.html</url-->
			<distribution>repo</distribution>
			<comments>A business-friendly OSS license</comments>
		</license>
	</licenses>
	<organization>
		<name>JBoss, a division of Red Hat</name>
		<url>http://www.jboss.org</url>
	</organization>
	<developers>
		<developer>
			<name>Randall Hauch</name>
			<id>randall</id>
			<email>rhauch@redhat.com</email>
			<organization>JBoss, a division of Red Hat</organization>
			<roles>
				<role>Project Lead</role>
				<role>Developer</role>
			</roles>
			<timezone>-6</timezone>
		</developer>
		<developer>
			<name>John Verhaeg</name>
			<id>johnny</id>
			<email>jverhaeg@redhat.com</email>
			<organization>JBoss, a division of Red Hat</organization>
			<roles>
				<role>Developer</role>
			</roles>
			<timezone>-6</timezone>
		</developer>
		<developer>
			<name>Dan Florian</name>
			<id>dan</id>
			<email>dflorian@redhat.com</email>
			<organization>JBoss, a division of Red Hat</organization>
			<roles>
				<role>Developer</role>
			</roles>
			<timezone>-6</timezone>
		</developer>
		<developer>
			<name>Stefano Maestri</name>
			<id>stefano</id>
			<email>stefano.maestri@javalinux.it</email>
			<roles>
				<role>Developer</role>
			</roles>
			<timezone>+1</timezone>
		</developer>
		<developer>
			<name>Serge Pagop</name>
			<id>spagop</id>
			<email>Serge.Pagop@innoq.com</email>
			<roles>
				<role>Developer</role>
			</roles>
			<timezone>+1</timezone>
		</developer>
		<developer>
			<name>Michael Trezzi</name>
			<id>mathwizard</id>
			<email>michael@mathwizard.org</email>
			<roles>
				<role>Developer</role>
			</roles>
			<timezone>+1</timezone>
		</developer>
		<developer>
			<name>Alexandre Porcelli</name>
			<id>porcelli</id>
			<email>porcelli@devexp.com.br</email>
			<roles>
				<role>Developer</role>
			</roles>
			<timezone>-3</timezone>
		</developer>
		<developer>
			<name>Sergiy Litsenko</name>
			<id>lisbor</id>
			<email>litsenko_sergey@yahoo.com</email>
			<roles>
				<role>Developer</role>
			</roles>
			<timezone>+10</timezone>
		</developer>
	</developers>
	<contributors>
		<contributor>
			<name>Greg Haber</name>
			<organization>JBoss, a division of Red Hat</organization>
			<timezone>-5</timezone>
		</contributor>
	</contributors>
	<modules>
		<module>dna-common</module>
		<module>dna-graph</module>
		<module>dna-repository</module>
		<module>dna-search</module>
		<module>dna-cnd</module>
		<module>dna-jcr</module>
		<module>extensions/dna-classloader-maven</module>
		<module>extensions/dna-sequencer-images</module>
		<module>extensions/dna-sequencer-mp3</module>
		<module>extensions/dna-sequencer-jbpm-jpdl</module>
		<!--module>extensions/dna-sequencer-esbMessage</module-->
		<module>extensions/dna-sequencer-cnd</module>
		<module>extensions/dna-sequencer-java</module>
		<module>extensions/dna-sequencer-msoffice</module>
		<module>extensions/dna-sequencer-xml</module>
		<module>extensions/dna-sequencer-zip</module>
		<module>extensions/dna-sequencer-ddl</module>
		<module>extensions/dna-connector-filesystem</module>
		<module>extensions/dna-connector-infinispan</module>
		<module>extensions/dna-connector-jbosscache</module>
		<module>extensions/dna-connector-svn</module>
		<module>extensions/dna-connector-store-jpa</module>
		<module>extensions/dna-mimetype-detector-aperture</module>
		<!--module>extensions/dna-common-jdbc</module--> 
		<!--module>extensions/dna-connector-jdbc-metadata</module--> 
		<module>web/dna-web-jcr-rest</module> 
		<module>web/dna-web-jcr-rest-client</module> 
		<module>web/dna-web-jcr-rest-war</module> 
		<module>utils/dna-jpa-ddl-gen</module> 
	</modules>
	<properties>
		<!-- These are properties used in the database profiles. Must initialize them to be empty so that Maven applies
		     them via filtering to the resources. If a project needs files filtered, however, make sure to include
		     a 'testResources' fragment in the 'build' section of the child project POM to say which files need to be filtered.
		     See the "dna-integration" or "extensions/dna-connector-store-jpa" project POMs for examples. -->
		<jpaSource.dialect/>
		<jpaSource.driverClassName/>
		<jpaSource.url/>
		<jpaSource.username/>
		<jpaSource.password/>
		<jpaSource.maximumConnectionsInPool>1</jpaSource.maximumConnectionsInPool>
		<jpaSource.minimumConnectionsInPool>0</jpaSource.minimumConnectionsInPool>
		<jpaSource.numberOfConnectionsToAcquireAsNeeded>1</jpaSource.numberOfConnectionsToAcquireAsNeeded>
		<jpaSource.maximumSizeOfStatementCache>100</jpaSource.maximumSizeOfStatementCache>
		<jpaSource.maximumConnectionIdleTimeInSeconds>0</jpaSource.maximumConnectionIdleTimeInSeconds>
		<jpaSource.referentialIntegrityEnforced>true</jpaSource.referentialIntegrityEnforced>
		<jpaSource.largeValueSizeInBytes>150</jpaSource.largeValueSizeInBytes>
		<jpaSource.autoGenerateSchema>create</jpaSource.autoGenerateSchema>
		<jpaSource.compressData/>
		<jpaSource.cacheTimeToLiveInMilliseconds/>
		<jpaSource.creatingWorkspacesAllowed/>
		<jpaSource.defaultWorkspaceName/>
		<jpaSource.predefinedWorkspaceNames/>
		<jpaSource.model/>
		<jpaSource.numberOfConnectionsToAcquireAsNeeded/>
		<jpaSource.referentialIntegrityEnforced>true</jpaSource.referentialIntegrityEnforced>
		<jpaSource.retryLimit>3</jpaSource.retryLimit>
		<jpaSource.rootNodeUuid/>
		<jpaSource.showSql>false</jpaSource.showSql>
	</properties>

	<profiles>
		<profile>
			<id>release</id>
			<modules>
				<module>dna-integration-tests</module>
				<module>docs</module>
        <module>docs/examples/gettingstarted</module>
			</modules>
		</profile>
		<profile>
			<id>integration</id>
			<modules>
				<module>dna-integration-tests</module>
        <module>docs/examples/gettingstarted</module>
			</modules>
		</profile>
		<profile>
			<id>jcr-tck</id>
			<modules>
				<module>dna-jcr-tck</module>
			</modules>
		</profile>
		<profile>
		    <!-- 
			This profile is activated when the "generate.docs" property is set,
			as in "mvn ... -Dgenerate.docs=true ..."
		    -->
	      <id>docs</id>
	      <activation>
	        <property>
	          <name>generate.docs</name>
	        </property>
	      </activation>
	      <modules>
	        <module>docs</module>
					<module>docs/examples/gettingstarted</module>
	      </modules>
		  <reporting>
		    <plugins>
		      <plugin>
		        <groupId>org.apache.maven.plugins</groupId>
		        <artifactId>maven-javadoc-plugin</artifactId>
		        <configuration>
		          <aggregate>true</aggregate>
				  <show>public</show>
				  <title>JBoss DNA ${project.version}</title>
		        </configuration>
		      </plugin>
		    </plugins>
		  </reporting>
	    </profile>
		<profile>
		  <!-- 
          This profile is activated manually, as in "mvn ... -P assembly ..."
		  -->
	      <id>assembly</id>
	      <build>
	        <plugins>
	          <plugin>
	            <artifactId>maven-assembly-plugin</artifactId>
	            <inherited>false</inherited>
	            <executions>
	              <execution>
	                <id>make-assembly</id>
	                <phase>install</phase>
	                <goals>
	                  <goal>assembly</goal>
	                </goals>
	              </execution>
	            </executions>
	            <configuration>
								<finalName>
									jboss-dna-${project.version}
								</finalName>
			          <descriptors>
									<descriptor>
										build/assembly/examples.xml
									</descriptor>
									<descriptor>
										build/assembly/javadoc.xml
									</descriptor>
									<descriptor>
										build/assembly/dist.xml
									</descriptor>
									<descriptor>
										build/assembly/src.xml
									</descriptor>
									<descriptor>
										build/assembly/all.xml
									</descriptor>
								</descriptors>
	            </configuration>
	          </plugin>
			      <plugin>
			        <artifactId>maven-javadoc-plugin</artifactId>
			        <version>2.5</version>
			        <executions>
			          <execution>
			            <id>generate-javadoc</id>
			            <phase>package</phase>
			            <goals>
			              <goal>javadoc</goal>
			            </goals>
			          </execution>
			        </executions>
			        <configuration>
			          <doclet>org.jboss.apiviz.APIviz</doclet>
			          <docletArtifact>
			            <groupId>org.jboss.apiviz</groupId>
			            <artifactId>apiviz</artifactId>
			            <version>1.3.0.GA</version>
			          </docletArtifact>
			          <attach>false</attach>
			          <!--stylesheetfile>${basedir}/src/javadoc/stylesheet.css</stylesheetfile-->
			          <useStandardDocletOptions>true</useStandardDocletOptions>
			          <outputDirectory>${project.build.directory}/apidoc</outputDirectory>
			          <reportOutputDirectory>${project.build.directory}/apidoc</reportOutputDirectory>
			          <destDir>apidoc</destDir>
			          <charset>UTF-8</charset>
			          <docencoding>UTF-8</docencoding>
			          <breakiterator>true</breakiterator>
			          <version>true</version>
			          <author>true</author>
			          <keywords>true</keywords>
			          <overview>${basedir}/src/javadoc/overview.html</overview>
			          <doctitle>${project.name} API Reference (${project.version})</doctitle>
			          <windowtitle>${project.name} API Reference (${project.version})</windowtitle>
			          <maxmemory>1024m</maxmemory>
			          <additionalparam>
			            -link http://java.sun.com/javase/6/docs/api/
			            -link http://java.sun.com/products/servlet/2.5/docs/servlet-2_5-mr2/
			            -link http://www.slf4j.org/apidocs/
			            -link http://logging.apache.org/log4j/1.2/apidocs/

			            -group "JCR implementation" ${project.groupId}.jcr*:${project.groupId}.cnd*
			            -group "Repository engine" ${project.groupId}.repository*
			            -group "Graph API" ${project.groupId}.graph:${project.groupId}.graph.io*:${project.groupId}.graph.property*:${project.groupId}.graph.request*:${project.groupId}.graph.session*:${project.groupId}.graph.xml*
			            -group "Connectors" ${project.groupId}.graph.cache*:${project.groupId}.graph.connector*:${project.groupId}.connector*
			            -group "Observation" ${project.groupId}.graph.observation*
			            -group "Sequencers" ${project.groupId}.graph.sequencer*:${project.groupId}.sequencer*
			            -group "MIME type detectors" ${project.groupId}.graph.mimetype*:${project.groupId}.mimetype*
			            -group "Web services" ${project.groupId}.web*
			            -group "Common utilities" ${project.groupId}.common*

			            -nopackagediagram
			          </additionalparam>
			          <encoding>UTF-8</encoding>
			          <locale>en_US</locale>
			          <excludePackageNames>${project.groupId}.test*:org.jboss.example.dna*</excludePackageNames>
			        </configuration>
			      </plugin>
	        </plugins>
	      </build>
	      <modules>
					<module>dna-integration-tests</module>
	        <module>docs</module>
	        <module>docs/examples/gettingstarted</module>
	      </modules>
			  <reporting>
			    <plugins>
			      <plugin>
			        <groupId>org.apache.maven.plugins</groupId>
			        <artifactId>maven-javadoc-plugin</artifactId>
			        <configuration>
			          <aggregate>true</aggregate>
							  <show>public</show>
							  <title>JBoss DNA ${project.version}</title>
			        </configuration>
			      </plugin>
			    </plugins>
			  </reporting>
	    </profile>
	
      <!--
          ###################################################################
          Database profiles to specify which DBMS is used for tests.
          ###################################################################

          To use, specify "-Ddatbase=<dbProfileName>" on the Maven command line.
      -->

      <!-- The default test environment is HSQLDB (may eventually move to H2) -->
      <profile>
          <id>default_dbms</id>
		      <activation>
		        <property>
		          <name>!database</name>
		        </property>
		      </activation>
          <dependencies>
            <dependency>
              <groupId>hsqldb</groupId>
              <artifactId>hsqldb</artifactId>
              <version>1.8.0.2</version>
            </dependency>
          </dependencies>
          <properties>
		        <database>hsqldb</database>
            <jpaSource.dialect>org.hibernate.dialect.HSQLDialect</jpaSource.dialect>
            <jpaSource.driverClassName>org.hsqldb.jdbcDriver</jpaSource.driverClassName>
            <jpaSource.url>jdbc:hsqldb:target/test/db/hsqldb/dna</jpaSource.url>
            <jpaSource.username>sa</jpaSource.username>
            <jpaSource.password />
          </properties>
      </profile>

      <!-- The HSQLDB test environment -->
      <profile>
          <id>hsqldb</id>
		      <activation>
		        <property>
		          <name>database</name>
		          <value>h2</value>
		        </property>
		      </activation>
          <dependencies>
            <dependency>
              <groupId>hsqldb</groupId>
              <artifactId>hsqldb</artifactId>
              <version>1.8.0.2</version>
            </dependency>
          </dependencies>
          <properties>
		        <database>hsqldb</database>
            <jpaSource.dialect>org.hibernate.dialect.HSQLDialect</jpaSource.dialect>
            <jpaSource.driverClassName>org.hsqldb.jdbcDriver</jpaSource.driverClassName>
            <jpaSource.url>jdbc:hsqldb:target/test/db/hsqldb/dna</jpaSource.url>
            <jpaSource.username>sa</jpaSource.username>
            <jpaSource.password />
          </properties>
      </profile>

      <!-- The H2 test environment -->

      <profile>
          <id>h2</id>
		      <activation>
		        <property>
		          <name>database</name>
		          <value>h2</value>
		        </property>
		      </activation>
          <dependencies>
            <dependency>
              <groupId>org.h2database</groupId>
              <artifactId>h2database</artifactId>
              <version>1.0.20061217</version>
            </dependency>
          </dependencies>
          <properties>
            <jpaSource.dialect>org.hibernate.dialect.H2Dialect</jpaSource.dialect>
            <jpaSource.driverClassName>org.h2.Driver</jpaSource.driverClassName>
            <jpaSource.url>jdbc:h2:mem:target/test/db/h2/dna</jpaSource.url>
            <jpaSource.username>sa</jpaSource.username>
            <jpaSource.password />
          </properties>
      </profile>

      <!-- The PostgreSQL test environment, local to the developer -->
      <!--profile>
          <id>postgresql_local</id>
		      <activation>
		        <property>
		          <name>database</name>
		          <value>postgresql_local</value>
		        </property>
		      </activation>
          <dependencies>
            <dependency>
              <groupId>postgresql</groupId>
              <artifactId>postgresql</artifactId>
              <version>8.4-701.jdbc3</version>
            </dependency>
          </dependencies>
          <properties>
            <jpaSource.dialect>org.hibernate.dialect.PostgreSQLDialect</jpaSource.dialect>
            <jpaSource.driver>org.postgresql.Driver</jpaSource.driver>
            <jpaSource.url>jdbc:postgresql://localhost/unit_test</jpaSource.url>
            <jpaSource.username>postgres</jpaSource.username>
            <jpaSource.password>data</jpaSource.password>
          </properties>
      </profile-->

      <!--
          ###################################################################
          Profiles naming db instances in the Red Hat QA/QE lab
          First, those with OSS drivers
          ###################################################################
      -->

      <!-- The MySQL5 test environment -->
      <profile>
          <id>mysql5</id>
		      <activation>
		        <property>
		          <name>database</name>
		          <value>mysql5</value>
		        </property>
		      </activation>
          <dependencies>
            <dependency>
              <groupId>mysql</groupId>
              <artifactId>mysql-connector-java</artifactId>
              <version>5.0.5</version>
            </dependency>
          </dependencies>
          <properties>
            <jpaSource.dialect>org.hibernate.dialect.MySQL5InnoDBDialect</jpaSource.dialect>
            <jpaSource.driverClassName>com.mysql.jdbc.Driver</jpaSource.driverClassName>
            <jpaSource.url>jdbc:mysql://vmg02.mw.lab.eng.bos.redhat.com/jbossdna</jpaSource.url>
            <jpaSource.username>jbossdna</jpaSource.username>
            <jpaSource.password>jbossdna</jpaSource.password>
          </properties>
      </profile>

      <!-- The PostgreSQL test environment -->
      <profile>
          <id>postgresql8</id>
		      <activation>
		        <property>
		          <name>database</name>
		          <value>postgresql8</value>
		        </property>
		      </activation>
          <dependencies>
            <dependency>
              <groupId>postgresql</groupId>
              <artifactId>postgresql</artifactId>
              <version>8.4-701.jdbc3</version>
            </dependency>
          </dependencies>
          <properties>
            <jpaSource.dialect>org.hibernate.dialect.PostgreSQLDialect</jpaSource.dialect>
            <jpaSource.driverClassName>org.postgresql.Driver</jpaSource.driverClassName>
            <jpaSource.url>jdbc:postgresql://vmg03.mw.lab.eng.bos.redhat.com:5432:jbossdna</jpaSource.url>
            <jpaSource.username>jbossdna</jpaSource.username>
            <jpaSource.password>jbossdna</jpaSource.password>
          </properties>
      </profile>

      <!--
          ###################################################################
          Then, those with commercial drivers
          ###################################################################
      -->

      <!-- The DB2 9.x test environment (using 9x drivers)-->
      <profile>
          <id>db2v9</id>
		      <activation>
		        <property>
		          <name>database</name>
		          <value>db2v9</value>
		        </property>
		      </activation>
          <dependencies>
            <dependency>
              <groupId>com.ibm</groupId>
              <artifactId>db2jcc</artifactId>
              <version>3.8.47</version>
            </dependency>
            <dependency>
              <groupId>com.ibm</groupId>
              <artifactId>db2jcc_license_cu</artifactId>
              <version>3.8.47</version>
            </dependency>
          </dependencies>
          <properties>
            <jpaSource.dialect>org.hibernate.dialect.DB2Dialect</jpaSource.dialect>
            <jpaSource.driverClassName>com.ibm.db2.jcc.DB2Driver</jpaSource.driverClassName>
            <jpaSource.url>jdbc:db2://vmg06.mw.lab.eng.bos.redhat.com:50000/jbossqa</jpaSource.url>
            <jpaSource.username>jbossdna</jpaSource.username>
            <jpaSource.password>jbossdna</jpaSource.password>
          </properties>
      </profile>

      <!-- The Oracle10g test environment -->
      <profile>
          <id>oracle10g</id>
		      <activation>
		        <property>
		          <name>database</name>
		          <value>oracle10g</value>
		        </property>
		      </activation>
          <dependencies>
            <dependency>
              <groupId>com.oracle</groupId>
              <artifactId>ojdbc14</artifactId>
              <!-- use the 10g drivers which are surprisingly largely bug free -->
              <version>10.0.2.0</version>
            </dependency>
          </dependencies>
          <properties>
            <jpaSource.dialect>org.hibernate.dialect.Oracle10gDialect</jpaSource.dialect>
            <jpaSource.driverClassName>oracle.jdbc.driver.OracleDriver</jpaSource.driverClassName>
            <jpaSource.url>jdbc:oracle:thin:@vmg05.mw.lab.eng.bos.redhat.com:1521:QAORA10</jpaSource.url>
            <jpaSource.username>jbossdna</jpaSource.username>
            <jpaSource.password>jbossdna</jpaSource.password>
          </properties>
      </profile>

      <!-- The Oracle11g test environment -->
      <profile>
          <id>oracle11g</id>
		      <activation>
		        <property>
		          <name>database</name>
		          <value>oracle11g</value>
		        </property>
		      </activation>
          <dependencies>
            <dependency>
              <groupId>com.oracle</groupId>
              <artifactId>ojdbc6</artifactId>
              <version>11.1.0.7.0</version>
            </dependency>
          </dependencies>
          <properties>
            <jpaSource.dialect>org.hibernate.dialect.Oracle10gDialect</jpaSource.dialect>
            <jpaSource.driverClassName>oracle.jdbc.driver.OracleDriver</jpaSource.driverClassName>
            <jpaSource.url>jdbc:oracle:thin:@dev04.qa.atl2.redhat.com:1521:qaora11</jpaSource.url>
            <jpaSource.username>jbossdna</jpaSource.username>
            <jpaSource.password>jbossdna</jpaSource.password>
          </properties>
      </profile>

      <!-- The Sybase 15 test environment -->
      <profile>
          <id>sybase15</id>
		      <activation>
		        <property>
		          <name>database</name>
		          <value>sybase15</value>
		        </property>
		      </activation>
          <dependencies>
            <dependency>
              <groupId>com.sybase</groupId>
              <artifactId>jconnect</artifactId>
              <version>6.0.5</version>
            </dependency>
          </dependencies>
          <properties>
            <jpaSource.dialect>org.hibernate.dialect.SybaseDialect</jpaSource.dialect>
            <jpaSource.driverClassName>com.sybase.jdbc3.jdbc.SybDriver</jpaSource.driverClassName>
            <jpaSource.url>jdbc:sybase:Tds:vmg07.mw.lab.eng.bos.redhat.com:5000/jbossdna</jpaSource.url>
            <jpaSource.username>jbossdna</jpaSource.username>
            <jpaSource.password>jbossdna</jpaSource.password>
          </properties>
      </profile>

      <!-- The SQLServer2008 (MS JDBC) test environment -->
      <profile>
          <id>mssql2008</id>
		      <activation>
		        <property>
		          <name>database</name>
		          <value>mssql2008</value>
		        </property>
		      </activation>
          <dependencies>
            <dependency>
              <groupId>com.microsoft.sqlserver</groupId>
              <artifactId>msjdbc</artifactId>
              <version>2.0.1008.2</version>
              <classifier>4</classifier><!-- Must use the JDBC-4 driver on JDK6 -->
            </dependency>
          </dependencies>
          <properties>
            <jpaSource.dialect>org.hibernate.dialect.SQLServerDialect</jpaSource.dialect>
            <jpaSource.driverClassName>com.microsoft.sqlserver.jdbc.SQLServerDriver</jpaSource.driverClassName>
            <jpaSource.url>jdbc:sqlserver://vmg04.mw.lab.eng.bos.redhat.com</jpaSource.url>
            <jpaSource.username>jbossdna</jpaSource.username>
            <jpaSource.password>jbossdna</jpaSource.password>
          </properties>
      </profile>

	</profiles>
	<build>
		<!-- This section defines the default plugin settings inherited by child projects. -->
		<pluginManagement>
			<plugins>
				<!-- Fixes how test resources of a project can be used in projects dependent on it  -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.2</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<!-- Specify the compiler options and settings -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
               <version>2.0.2</version>
				<configuration>
					<source>1.5</source>
					<target>1.5</target>
					<showDeprecation>false</showDeprecation>
					<showWarnings>false</showWarnings>
				</configuration>
			</plugin>
			<!-- Produce source jars during the 'verify' phase -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>verify</phase>
						<goals>
							<goal>jar</goal>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<includes>
						<include>**/*TestCase.java</include>
						<include>**/*Test.java</include>
					</includes>
					<!--excludes>
						<exclude>**/Abstract*TestCase.java</exclude>
						<exclude>**/Abstract*Test.java</exclude>
					</excludes-->
					<systemProperties>
						<property>
							<name>java.io.tmpdir</name>
							<value>${basedir}/target</value>
						</property>
					</systemProperties>
				</configuration>
			</plugin>
			<!-- 
           Build a test-jar for each project, so that src/test/* resources and classes can be used
           in other projects.  Also customize how the jar files are assembled.
           -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<archive>
						<manifest>
							<addDefaultSpecificationEntries>
								true
							</addDefaultSpecificationEntries>
							<addDefaultImplementationEntries>
								true
							</addDefaultImplementationEntries>
						</manifest>
						<manifestEntries>
							<Implementation-URL>
								${pom.url}
							</Implementation-URL>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<!--
	This section defines the default dependency settings inherited by child projects.
	Note that this section does not add dependencies, but rather provide default settings.
	-->
	<dependencyManagement>
		<dependencies>
			<!-- DNA subprojects -->
			<dependency>
				<groupId>org.jboss.dna</groupId>
				<artifactId>dna-common</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jboss.dna</groupId>
				<artifactId>dna-classloader-maven</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jboss.dna</groupId>
				<artifactId>dna-graph</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jboss.dna</groupId>
				<artifactId>dna-cnd</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jboss.dna</groupId>
				<artifactId>dna-search</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jboss.dna</groupId>
				<artifactId>dna-repository</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jboss.dna</groupId>
				<artifactId>dna-jcr</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jboss.dna</groupId>
				<artifactId>dna-jcr-tck</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jboss.dna</groupId>
				<artifactId>dna-connector-jbosscache</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jboss.dna</groupId>
				<artifactId>dna-connector-store-jpa</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jboss.dna</groupId>
				<artifactId>dna-connector-filesystem</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jboss.dna</groupId>
				<artifactId>dna-connector-svn</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jboss.dna</groupId>
				<artifactId>dna-mimetype-detector-aperture</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jboss.dna</groupId>
				<artifactId>dna-sequencer-cnd</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jboss.dna</groupId>
				<artifactId>dna-sequencer-images</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jboss.dna</groupId>
				<artifactId>dna-sequencer-java</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jboss.dna</groupId>
				<artifactId>dna-sequencer-mp3</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jboss.dna</groupId>
				<artifactId>dna-sequencer-msoffice</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jboss.dna</groupId>
				<artifactId>dna-sequencer-xml</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jboss.dna</groupId>
				<artifactId>dna-sequencer-zip</artifactId>
				<version>${project.version}</version>
			</dependency>
			<!-- 
		    Time and Date
		    -->
			<dependency>
				<groupId>joda-time</groupId>
				<artifactId>joda-time</artifactId>
				<version>1.4</version>
			</dependency>
			<!-- Testing (note the scope) -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.4</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest-library</artifactId>
				<version>1.1</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-all</artifactId>
				<version>1.5</version>
				<scope>test</scope>
			</dependency>
			<!-- Logging (require SLF4J API for compiling, but use Log4J and its SLF4J binding for testing) -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>1.5.8</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
				<version>1.5.8</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>1.2.14</version>
				<scope>test</scope>
			</dependency>
			<!-- Java Concurrency in Practice annotations -->
			<dependency>
				<groupId>net.jcip</groupId>
				<artifactId>jcip-annotations</artifactId>
				<version>1.0</version>
				<scope>compile</scope>
			</dependency>
			<!-- Java Content Repository API -->
			<dependency>
				<groupId>javax.jcr</groupId>
				<artifactId>jcr</artifactId>
				<version>1.0.1</version>
				<scope>compile</scope>
			</dependency>
		    <!-- 
		      Apache JCR API unit tests (for any JCR implementation), which is a subset of the official TCK
		    -->
	    <dependency>
				<groupId>org.apache.jackrabbit</groupId>
				<artifactId>jackrabbit-jcr-tests</artifactId>
				<version>1.4</version>
				<scope>test</scope>
		    </dependency>
			<!-- Databases and JDBC Drivers -->
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>5.0.7</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.derby</groupId>
				<artifactId>derby</artifactId>
				<version>10.2.1.6</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
			</plugin>
	    </plugins>
	</reporting>

	<repositories>
		<repository>
			<id>jboss</id>
			<url>http://repository.jboss.com/maven2</url>
		</repository>
		<repository>
			<id>jboss-snapshot</id>
			<url>http://snapshots.jboss.org/maven2</url>
		</repository>
	</repositories>
	<distributionManagement>
		<repository>
			<!-- Copy the distribution jar file to a local checkout of the maven repository 
 			  -  This variable can be set in $MAVEN_HOME/conf/settings.xml -->
			<id>repository.jboss.org</id>
			<url>file://${jboss.repository.root}</url>
		</repository>
	</distributionManagement>
</project>
