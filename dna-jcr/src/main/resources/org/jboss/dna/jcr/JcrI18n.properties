#
# JBoss DNA (http://www.jboss.org/dna)
# See the COPYRIGHT.txt file distributed with this work for information
# regarding copyright ownership.  Some portions may be licensed
# to Red Hat, Inc. under one or more contributor license agreements.
# See the AUTHORS.txt file in the distribution for a full listing of 
# individual contributors. 
#
# JBoss DNA is free software. Unless otherwise indicated, all code in JBoss DNA
# is licensed to you under the terms of the GNU Lesser General Public License as
# published by the Free Software Foundation; either version 2.1 of
# the License, or (at your option) any later version.
#
# JBoss DNA is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this software; if not, write to the Free
# Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
# 02110-1301 USA, or see the FSF site: http://www.fsf.org.
#
cannotConvertValue = Cannot convert {0} value to {1}
credentialsMustProvideJaasMethod = The Credentials class "{0}" must implement "public LoginContext getLoginContext();", be an instance of "javax.jcr.SimpleCredentials", or be an instance of "org.jboss.dna.jcr.SecurityContextCredentials"
mustBeInPrivilegedAction=login() can only be called successfully from within a java.security.PrivilegedAction or when the ANONYMOUS_USER_ROLES repository option is set
credentialsMustReturnLoginContext = The "getLoginContext()" method in Credentials class "{0}" must not return a null
defaultWorkspaceName=
inputStreamConsumed = This value was already consumed as an input stream
nonInputStreamConsumed = This value was already consumed as a non-input stream
pathNotFound = No item exists at path {0} in workspace "{1}"
pathNotFoundRelativeTo = No item exists at path {0} relative to {1} in workspace "{2}"
pathCannotHaveSameNameSiblingIndex = The path specified by the argument "{0}" cannot have a same-name-sibling index
permissionDenied = Permission denied to perform actions "{1}" on path {0}
repositoryMustBeConfigured = DNA repositories must be configured with either a repository source factory or a repository source
sourceInUse = All sessions must end before a new repository source can be set
repositoryDoesNotExist = There is no repository named "{0}"
fileDoesNotExist = Unable to find or read the file "{0}"

rootNodeHasNoParent = The root node has no parent node
childNodeAlreadyExists = A child node named "{0}" already exists at node "{1}"

noNamespaceWithPrefix = There is no namespace with prefix "{0}"
noNamespaceWithUri = There is no namespace with URI "{0}"
unableToChangeTheDefaultNamespace = The default namespace is reserved and cannot be changed
unableToRegisterReservedNamespacePrefix = Unable to register the namespace "{1}" with prefix "{0}" because this prefix is reserved
unableToRegisterReservedNamespaceUri = Unable to register the namespace "{1}" with prefix "{0}" because this URI is reserved
unableToRegisterNamespaceUsingXmlPrefix = Unable to register the namespace "{1}" with prefix "{0}" because prefixes starting with 'xml' (in any case) are reserved
unableToRegisterNamespaceWithInvalidPrefix = Unable to register the namespace "{1}" with prefix "{0}" because the prefix must be a valid XML NCName
errorRegisteringPersistentNamespace = Error registering the persisted namespace "{1}" with prefix "{0}"
unableToUnregisterReservedNamespacePrefix = Unable to unregister the namespace "{1}" with prefix "{0}" because this prefix is reserved
unableToUnregisterReservedNamespaceUri = Unable to unregister the namespace "{1}" with prefix "{0}" because this URI is reserved
unableToUnregisterPrefixForNamespaceThatIsNotRegistered = The namespace with prefix "{0}" is not registered and cannot be unregistered
unableToRemapUriNotRegisteredInNamespaceRegistry = Unable to remap the namespace "{1}" to prefix "{0}" because the URI is not already registered in the workspace's namespace registry
unableToRemapUriUsingPrefixUsedInNamespaceRegistry = Unable to remap the namespace "{1}" to prefix "{0}" because the prefix is already used as the prefix for the namespace "{2}" in the workspace's namespace registry

errorCleaningUpLocks = Error while cleaning up locks for JCR repository "{0}"
cleaningUpLocks = Lock clean up process begun
cleanedUpLocks = Lock clean up process completed
errorWhileInitializingTheNamespaceRegistry = Error while initializing the namespace registry for workspace "{0}"
invalidRelativePath = "{0}" is not a valid relative path
invalidPathParameter = The "{1}" parameter value "{0}" was not a valid path
invalidNamePattern = The "{1}" name pattern contained the '{0}' character, which is not allowed in a name pattern
invalidNodeTypeNameParameter = The "{1}" parameter value "{0}" was not a valid node type name
noPrimaryItemNameDefinedOnPrimaryType = The primary type "{0}" for node "{1}" in workspace "{2}" does not define a primary item name
primaryItemNameForPrimaryTypeIsNotValid = The primary type "{0}" for node "{2}" in workspace "{3}" defines an invalid primary item name ("{1}")
primaryItemDoesNotExist = The node "{2}" in workspace "{3}" does not have an item named "{1}" as defined by its primary type "{0}"
itemNotFoundWithUuid = An item with UUID "{0}" could not be found in workspace "{1}": {2}
itemAlreadyExistsWithUuid = An item with UUID "{0}" already exists in workspace "{1}" at "{2}"
itemNotFoundAtPath = An item at "{0}" could not be found in workspace "{1}"
itemNotFoundAtPathRelativeToReferenceNode = An item at "{0}" relative to "{1}" could not be found in workspace "{2}"
propertyNotFoundOnNode = Property "{0}" does not exist on node "{1}" in workspace "{2}"
propertyNotFoundAtPathRelativeToReferenceNode = A property at "{0}" relative to "{1}" could not be found in workspace "{2}"
nodeNotFoundAtPathRelativeToReferenceNode = A node at "{0}" relative to "{1}" could not be found in workspace "{2}"
childNotFoundUnderNode = The child "{0}" could not be found under "{1}" in workspace "{2}"
errorWhileFindingNodeWithUuid = Error while finding the node with UUID "{0}" in workspace "{1}": {2}
errorWhileFindingNodeWithPath = Error while finding the node "{0}" in workspace "{1}"
nodeDefinitionCouldNotBeDeterminedForNode = Unable to determine a valid node definition for the node "{0}" in workspace "{1}" of "{2}"
noSnsDefinitionForNode = A node definition that allows same name siblings could not be found for the node "{0}" in workspace "{1}"
missingNodeTypeForExistingNode = Missing primary node type "{0}" for node {1} in workspace "{2}" of "{3}"
unableToCreateNodeWithPrimaryTypeThatDoesNotExist = Unable to create child "{1}" in workspace "{2}" because the node type "{0}" does not exist
unableToCreateNodeWithNoDefaultPrimaryTypeOnChildNodeDefinition = Unable to create child "{2}" in workspace "{3}" because the node definition "{0}" on the "{1}" node type has no default primary type 
unableToSaveNodeThatWasCreatedSincePreviousSave = Unable to save node "{0}" in workspace "{1}" because it was created since the last save
unableToSetMultiValuedPropertyUsingSingleValue = Unable to set existing multi-valued property "{0}" on node "{1}" in workspace "{2}" using single-value setter methods
unableToSetSingleValuedPropertyUsingMultipleValues = Unable to set existing single-valued property "{0}" on node "{1}" in workspace "{2}" using multi-value setter methods
invalidMethodForSingleValuedProperty = This method cannot be called on a property with a single value
invalidMethodForMultiValuedProperty = This method cannot be called on a property with multiple values
unableToRefreshBranchBecauseChangesDependOnChangesToNodesOutsideOfBranch = Unable to refresh "{0}" in workspace "{1}" because it contains changes that depend on changes to nodes outside of this branch
unableToSaveBranchBecauseChangesDependOnChangesToNodesOutsideOfBranch = Unable to save "{0}" in workspace "{1}" because it contains changes that depend on changes to nodes outside of this branch
allPropertyValuesMustHaveSameType = All values of property "{0}" on node "{3}" in workspace "{4}" must all be {2} values (values were: {1})
cannotRemoveNodeFromClone = The node at "{0}" with UUID "{1}" exists in the current workspace but cannot be removed because it is a mandatory child node
cannotRemoveNodeFromCloneDueToChangesInSession = The node at "{0}" with UUID "{1}" already exists in the current workspace and would be removed by the clone, but that node has been changed within this session and therefore cannot be removed
cannotRemoveParentNodeOfTarget = The node at "{0}" with UUID "{1}" is a parent of the target node for this operation "{2}"
invalidPropertyType = Invalid property type: {0}
 

unableToRemoveRootNode = Unable to remove the root node in workspace "{1}"
unableToMoveNodeToBeChildOfDecendent = Node "{0}" in workspace "{2}" cannot be moved under a decendant node ("{1}") 
nodeHasAlreadyBeenRemovedFromThisSession = Node "{0}" in workspace "{1} has already been removed from this session

REP_NAME_DESC = DNA Repository
REP_VENDOR_DESC = JBoss - A division of Red Hat
SPEC_NAME_DESC = Content Repository for Java Technology API

errorObtainingWorkspaceNames = Error while obtaining the workspace names for the "{0}" repository: {1}
errorObtainingDefaultWorkspaceName = Error while obtaining the default workspace names for the "{0}" repository: {1}
workspaceNameIsInvalid = "{1}" is not a valid workspace name for the "{0}" repository
errorVerifyingWorkspaceName =Error validating the workspace name "{1}" for the "{0}" repository\: {2}
typeNotFound=No type exists with name "{0}"
supertypeNotFound=Could not find type "{0}" which is a required supertype of type "{1}"

systemSourceNameOptionValueDoesNotReferenceExistingSource = The JCR Repository 'SYSTEM_SOURCE_NAME' option value "{0}" references an invalid or non-existant source "{1}"
systemSourceNameOptionValueDoesNotReferenceValidWorkspace = The JCR Repository 'SYSTEM_SOURCE_NAME' option value "{0}" references an invalid or non-existant workspace in the "{1}" source
systemSourceNameOptionValueIsNotFormattedCorrectly = The JCR Repository 'SYSTEM_SOURCE_NAME' option value "{0}" is invalid or improperly formatted

searchIndexDirectoryOptionSpecifiesFileNotDirectory = The JCR Repository '{1}' option value "{0}" specifies an existing file on the local file system, but a directory is required
searchIndexDirectoryOptionSpecifiesDirectoryThatCannotBeRead = The JCR Repository '{1}' option value "{0}" specifies a directory on the local file system that cannot be read
searchIndexDirectoryOptionSpecifiesDirectoryThatCannotBeWrittenTo = The JCR Repository '{1}' option value "{0}" specifies a directory on the local file system that cannot be written
searchIndexDirectoryOptionSpecifiesDirectoryThatCannotBeCreated = = The JCR Repository '{1}' option value "{0}" specifies a non-existant directory on the local file system that cannot be created

noNegativeDepth=Depth parameter ({0}) cannot be negative
tooDeep=Depth parameter ({0}) cannot be greater than the result of getDepth() for this node

notStoredQuery=This query has not been stored or loaded
invalidQueryLanguage="{0}" is not a valid query langauge.  Supported languages are\: {1}
queryCannotBeParsedUsingLanguage=The {0} query "{1}" is not well-formed: {2}
queryInLanguageIsNotValid=The {0} query "{1}" has one or more errors: {2}

invalidNodeTypeName=Node types cannot have a null or empty name
noSuchNodeType=Type named '{0}' does not exist
nodeTypeAlreadyExists=Node type '{0}' already exists
invalidPrimaryTypeName=Required primary type '{0}' in type '{1}' does not exist
invalidSupertypeName=Supertype '{0}' from type '{1}' does not exist
supertypesConflict=Types '{0}' and '{1}' cannot both be supertypes of the same type, as both separately declare {2} '{3}'
ambiguousPrimaryItemName=Primary item name '{0}' matches the name of a child node and a property
invalidPrimaryItemName=Primary item name '{0}' does not match the name of any child nodes or properties
autocreatedNodesNeedDefaults=Autocreated child node '{0}' must specify a default primary type
residualDefinitionsCannotBeMandatory=Residual {0} cannot be mandatory
cannotOverrideProtectedDefinition=Cannot override protected {1} definition from '{0}'
cannotMakeMandatoryDefinitionOptional=Cannot override mandatory {1} definition from '{0}' with a non-mandatory definition.
constraintsChangedInSubtype=Must use exact same constraints when overriding the property definition for {0} from type '{1}'
cannotRedefineProperty=Cannot redefine property '{0}' with new type '{1}' when existing property with same name in type '{2}' has incompatible type '{3}'
autocreatedPropertyNeedsDefault=Auto-created property '{0}' in type '{1}' must specify a default value
singleValuedPropertyNeedsSingleValuedDefault=Single-valued property '{0}' in type '{1}' cannot have multiple default values

noDefinition=Cannot find a definition for the {0} named '{1}' on the node at '{2}' with primary type '{3}' and mixin types: {4}
noSnsDefinition=Cannot find a definition that allows same-name siblings for the child node named '{0}' on the node at '{1}' with primary type '{2}' and mixin types: {3} and a child node already exists with this name
missingMandatoryItem=The mandatory {0} named '{1}' defined in type '{2}' is missing from the node at '{3}'

allNodeTypeTemplatesMustComeFromSameSession=All node type templates must be created from the same javax.jcr.Session

nodeNotReferenceable=Only referenceable nodes may be the value of reference properties
nodeNotReferenceableUuid = Only referenceable nodes have a public UUID assigned
noPendingChangesAllowed=This operation cannot be performed when the session has pending changes

cannotUnregisterSupertype=Cannot unregister type '{0}' which is supertype of type '{1}'
cannotUnregisterRequiredPrimaryType=Cannot unregister type '{0}' which is the required primary type for child node '{2}' on type '{1}'
cannotUnregisterDefaultPrimaryType=Cannot unregister type '{0}' which is the default primary type for child node '{2}' of type '{1}'

cannotAddMixin = This node does not allow adding the mixin type "{0}"
invalidMixinTypeForNode = "{0}" is not currently a mixin type for node "{1}"
notOrderable = The primary type "{0}" for this node (at "{1}") does not have orderable children

# Lock messages
cannotRemoveLockToken = The lock token '{0}' is a session-scoped lock
alreadyLocked = The node at location '{0}' is already locked
parentAlreadyLocked = The node at location '{0}' cannot be locked because the parent node at location '{1}' is already locked
notLocked = The node at location '{0}' is not locked
lockTokenNotHeld = The node at location '{0}' is locked and this session does not hold its lock token
lockTokenAlreadyHeld = The lock token '{0}' is already held by another session.  It must be removed from that session before it can be added to another session.
uuidRequiredForLock = Only referenceable nodes can be locked.  The node at location '(0}' is not referenceable.

# JcrObservationManager messages
cannotCreateUuid = Factory was unable to create UUID from text '{0}'
cannotPerformNodeTypeCheck = Error checking primary type '{0}' with mixins of '{1}' against type names of '{2}'
sessionIsNotActive = The session with an ID of '{0}' is no longer active. 
